# –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–ú–ï–ù–ò–¢–¨ utils/message_utils.py –Ω–∞:

from typing import Optional
from loguru import logger
from aiogram import Bot

async def find_latest_message(bot: Bot, channel_id: str, owner_id: int, last_saved_id: Optional[int] = None) -> Optional[int]:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ
    –ë–ï–ó –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        channel_id: ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
        owner_id: ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞ (–ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏)
        last_saved_id: –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    
    Returns:
        ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ None
    """
    try:
        logger.info(f"üîç –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ {channel_id}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É –ø–æ–∏—Å–∫–∞
        if last_saved_id:
            # –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ ID + –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–ø–∞—Å
            start_id = last_saved_id + 50
            logger.info(f"üìç –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ —Å ID {start_id} (–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π: {last_saved_id})")
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ ID, –Ω–∞—á–∏–Ω–∞–µ–º —Å —Ä–∞–∑—É–º–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
            start_id = 1000
            logger.info(f"üìç –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ —Å ID {start_id} (–Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ ID)")
        
        max_check = 200  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        checked_count = 0
        valid_id = None
        
        # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤–ø–µ—Ä–µ–¥ (–±–æ–ª–µ–µ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
        logger.debug("üîé –ü–æ–∏—Å–∫ –±–æ–ª–µ–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
        for msg_id in range(start_id, start_id + max_check):
            checked_count += 1
            
            if checked_count % 20 == 0:
                logger.info(f"‚è≥ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ {checked_count} —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–µ–∫—É—â–∏–π ID: {msg_id})")
            
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º copy_message –≤–º–µ—Å—Ç–æ forward_message –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
                # copy_message –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –≤–∏–¥–∏–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                test_msg = await bot.copy_message(
                    chat_id=channel_id,  # –ö–æ–ø–∏—Ä—É–µ–º –≤ —Ç–æ—Ç –∂–µ –∫–∞–Ω–∞–ª
                    from_chat_id=channel_id,
                    message_id=msg_id,
                    disable_notification=True
                )
                
                # –ï—Å–ª–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ, —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                # –°—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                try:
                    await bot.delete_message(chat_id=channel_id, message_id=test_msg.message_id)
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
                
                logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {msg_id} –≤ –∫–∞–Ω–∞–ª–µ {channel_id}")
                valid_id = msg_id
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–∏—Å–∫, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–∞–º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ
                
            except Exception as e:
                error_text = str(e).lower()
                if any(phrase in error_text for phrase in [
                    "message not found", 
                    "message to copy not found",
                    "message_id_invalid",
                    "message to forward not found"
                ]):
                    # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
                    continue
                else:
                    # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, –ª–æ–≥–∏—Ä—É–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                    logger.debug(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {msg_id}: {e}")
                    continue
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –±–æ–ª–µ–µ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∏—â–µ–º –Ω–∞–∑–∞–¥ –æ—Ç –∏—Å—Ö–æ–¥–Ω–æ–π —Ç–æ—á–∫–∏
        if not valid_id:
            logger.debug("üîô –ü–æ–∏—Å–∫ –±–æ–ª–µ–µ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
            search_start = start_id if last_saved_id else start_id
            
            for msg_id in range(search_start, max(1, search_start - max_check), -1):
                checked_count += 1
                
                if checked_count % 20 == 0:
                    logger.info(f"‚è≥ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ {checked_count} —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–µ–∫—É—â–∏–π ID: {msg_id})")
                
                try:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º copy_message –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                    test_msg = await bot.copy_message(
                        chat_id=channel_id,
                        from_chat_id=channel_id,
                        message_id=msg_id,
                        disable_notification=True
                    )
                    
                    # –£–¥–∞–ª—è–µ–º —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    try:
                        await bot.delete_message(chat_id=channel_id, message_id=test_msg.message_id)
                    except:
                        pass
                    
                    logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {msg_id} –≤ –∫–∞–Ω–∞–ª–µ {channel_id}")
                    valid_id = msg_id
                    break  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–∞–∑–∞–¥
                    
                except Exception as e:
                    error_text = str(e).lower()
                    if any(phrase in error_text for phrase in [
                        "message not found", 
                        "message to copy not found",
                        "message_id_invalid",
                        "message to forward not found"
                    ]):
                        continue
                    else:
                        logger.debug(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {msg_id}: {e}")
                        continue
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞
        if valid_id:
            logger.info(f"üéØ –ù–∞–π–¥–µ–Ω–æ –≤–∞–ª–∏–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (ID: {valid_id}) –≤ –∫–∞–Ω–∞–ª–µ {channel_id} –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ {checked_count} —Å–æ–æ–±—â–µ–Ω–∏–π")
            return valid_id
        else:
            logger.warning(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ {channel_id} –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ {checked_count} —Å–æ–æ–±—â–µ–Ω–∏–π")
            return None
            
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ {channel_id}: {e}")
        import traceback
        logger.error(f"Traceback: {traceback.format_exc()}")
        return None


async def check_message_exists(bot: Bot, channel_id: str, message_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ë–ï–ó –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∞–¥–º–∏–Ω—É
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        channel_id: ID –∫–∞–Ω–∞–ª–∞
        message_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    
    Returns:
        True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    try:
        # –ü—Ä–æ–±—É–µ–º —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ—Ç –∂–µ –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
        test_msg = await bot.copy_message(
            chat_id=channel_id,
            from_chat_id=channel_id, 
            message_id=message_id,
            disable_notification=True
        )
        
        # –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–∏, —Å—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º –∫–æ–ø–∏—é
        try:
            await bot.delete_message(chat_id=channel_id, message_id=test_msg.message_id)
        except:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
            
        return True
        
    except Exception as e:
        error_text = str(e).lower()
        if any(phrase in error_text for phrase in [
            "message not found",
            "message to copy not found", 
            "message_id_invalid",
            "message to forward not found"
        ]):
            return False
        else:
            # –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞
            logger.warning(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {message_id} –≤ –∫–∞–Ω–∞–ª–µ {channel_id}: {e}")
            return False