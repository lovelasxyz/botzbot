# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ –¥–ª—è utils/keyboard_factory.py

from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import Dict, List, Any

class KeyboardFactory:
    """Factory Pattern implementation for creating keyboards"""
    
    @staticmethod
    def create_main_keyboard(running: bool = False) -> Any:
        """Create main menu keyboard"""
        kb = InlineKeyboardBuilder()
        kb.button(
            text="üîÑ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–æ—Ç–∞—Ü–∏—é" if not running else "‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ—Ç–∞—Ü–∏—é",
            callback_data="toggle_forward"
        )
        kb.button(text="‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏", callback_data="channels")
        kb.button(text="ü§ñ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞", callback_data="clone_bot")
        kb.button(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–æ–Ω–∞–º–∏", callback_data="manage_clones")
        kb.button(text="üí¨ –°–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–≤—ã—Ö —á–∞—Ç–æ–≤", callback_data="list_chats")
        kb.button(text="üìÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º", callback_data="manage_schedule")  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        kb.adjust(2)
        return kb.as_markup()

    @staticmethod
    def create_chat_list_keyboard(chats: Dict[int, str]) -> Any:
        """Create chat list keyboard with remove buttons and pin test buttons"""
        kb = InlineKeyboardBuilder()
        for chat_id, title in chats.items():
            kb.button(
                text=f"üìå –¢–µ—Å—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –≤ {title}",
                callback_data=f"test_pin_{chat_id}"
            )
            kb.button(
                text=f"‚ùå –£–¥–∞–ª–∏—Ç—å {title}",
                callback_data=f"remove_{chat_id}"
            )
        kb.button(text="–ù–∞–∑–∞–¥", callback_data="back_to_main")
        kb.adjust(1)
        return kb.as_markup()

    @staticmethod
    def create_channel_management_keyboard(channels: List[str]) -> Any:
        """Create channel management keyboard"""
        kb = InlineKeyboardBuilder()
        kb.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="add_channel")
        
        # Add buttons for each channel
        for channel in channels:
            # Truncate channel name if too long
            display_name = channel[:15] + "..." if len(channel) > 18 else channel
            
            # Button only for removing channels
            kb.button(
                text=f"‚ùå –£–¥–∞–ª–∏—Ç—å ({display_name})",
                callback_data=f"remove_channel_{channel}"
            )
        
        kb.button(text="–ù–∞–∑–∞–¥", callback_data="back_to_main")
        kb.adjust(1)
        return kb.as_markup()